"use strict";angular.module("ts.utils",[]),angular.module("ts.utils").directive("uiEvent",function($parse){return{priority:100,link:function($scope,$elm,$attrs){var events=$scope.$eval($attrs.uiEvent);angular.forEach(events,function(uiEvent,eventName){var fn=$parse(uiEvent);$elm.bind(eventName,function(evt){var params=Array.prototype.slice.call(arguments);params=params.splice(1),fn($scope,{$event:evt,$params:params}),$scope.$$phase||$scope.$apply()})})}}}),angular.module("ts.utils").filter("tsTruncate",function(){return function(value,wordLimit){var ellipses=arguments.length<=2||void 0===arguments[2]?"â€¦":arguments[2];if(!value||!angular.isNumber(wordLimit))return value;var words=value.split(" ");return words.length>wordLimit&&(value=words.slice(0,wordLimit).join(" "),ellipses&&(value+=ellipses)),value}}),angular.module("ts.utils").directive("scrollOn",function($timeout){return{link:{pre:function($scope,$element,$attrs){$scope.$on($attrs.scrollOn,function(event,location){$timeout(function(){"bottom"===location?$element[0].scrollTop=$element[0].scrollHeight:"top"===location?$element[0].scrollTop=0:$element[0].scrollTop=location},!0)})}}}}),angular.module("ts.utils").directive("focusOn",function($window,focusOnConfig){return{link:function($scope,$element,$attrs){var listener=angular.noop;$attrs.$observe("focusOn",function(newVal){listener(),listener=$scope.$on(newVal,function(){var speed=arguments.length<=0||void 0===arguments[0]?1e3:arguments[0];if($element.parents(".reveal-modal").length){var targetWindow=$element.parents(".reveal-modal .content");targetWindow.animate({scrollTop:$element.offset().top-targetWindow.offset().top+targetWindow.scrollTop()},{speed:speed,complete:function(){$element[0].focus()}})}else{var offset=$element.offset().top,extraOffset=focusOnConfig.offset;void 0!==$attrs.focusOnOffset&&(extraOffset=parseInt($attrs.focusOnOffset)),focusOnConfig.autoCenter&&void 0===$attrs.focusOnAutoCenter||$attrs.focusOnAutoCenter&&"true"==$attrs.focusOnAutoCenter?offset=offset-window.document.body.clientHeight/2+$element[0].clientHeight/2:offset-=extraOffset,$("body").animate({scrollTop:offset},{speed:speed,complete:function(){$element[0].focus()}})}})})}}}).provider("focusOnConfig",function(){var _offset=0,_autoCenter=!1;this.autoCenter=function(value){_autoCenter=value},this.offset=function(value){_offset=value},this.$get=function(){return{offset:_offset,autoCenter:_autoCenter}}}),angular.module("ts.utils").directive("tsDropDown",function($templateCache,$compile,$log){return{restrict:"A",require:"ngModel",transclude:{listItem:"tsListItem",placeholder:"tsPlaceholder"},scope:{tsDropDownTemplate:"@",tsDropDown:"="},templateUrl:"templates/tsDropDown.html",link:function($scope,$element,$attr,ngModelCtrl,$transclude){function toggleDropDown(){var rect=$element[0].getBoundingClientRect(),middleOfWindow=window.innerHeight/2,middleOfElement=rect.top+rect.height/2;if(middleOfElement>middleOfWindow){$scope.direction="up",dropDownListContainer[0].style.bottom=rect.height+"px",dropDownListContainer[0].style.top="auto";for(var i=0;i<dropDownUnorderedList.children().length;i++){var childElement=dropDownUnorderedList.children()[i];dropDownUnorderedList.prepend(childElement)}}else dropDownListContainer[0].style.top=rect.height+"px",dropDownListContainer[0].style.bottom="auto",$scope.direction="down";$scope.dropDownOpen=!$scope.dropDownOpen}function updateSelected(selectedValue){placeholderScope.selectedItem=selectedItem=selectedValue,$scope.$evalAsync(read)}function read(){ngModelCtrl.$setViewValue(selectedItem)}var selectedItem="default selected item",dropDownContainer=angular.element($element.children()[0]),textDisplayElement=angular.element(dropDownContainer.children()[0]),dropDownArrow=angular.element(dropDownContainer.children()[1]),dropDownListContainer=angular.element(dropDownContainer.children()[2]),dropDownUnorderedList=angular.element($element[0].querySelector("ul"));$scope.direction="down",$scope.dropDownOpen=!1,$element.on("keydown",function(event){switch(event.keyCode){case 37:break;case 38:event.preventDefault();break;case 39:break;case 40:event.preventDefault();break;case 13:toggleDropDown()}console.log(event.keyCode)}),$scope.tsDropDown.forEach(function(dropDownItem){$transclude($scope.$new(),function(clone,scope){scope.item=dropDownItem;var listItem=angular.element(document.createElement("li"));listItem.append(clone[0]),listItem.on("click",function(){updateSelected(dropDownItem),$scope.$apply(toggleDropDown)}),listItem[0].style.width=textDisplayElement[0].offsetWidth-12+"px",dropDownUnorderedList.append(listItem)},null,"listItem")});var placeholderElement,placeholderScope;$transclude($scope.$new(),function(clone,scope){placeholderScope=scope,placeholderElement=clone[0],textDisplayElement.append(clone[0])},null,"placeholder"),textDisplayElement.on("click",function(){$scope.$apply(toggleDropDown)}),dropDownArrow.on("click",function(){$scope.$apply(toggleDropDown)}),ngModelCtrl&&(ngModelCtrl.$render=function(){updateSelected(ngModelCtrl.$viewValue||"")},$element.on("blur keyup",function(){$scope.$evalAsync(read),ngModelCtrl.$render()}),read())}}}),angular.module("ts.utils").directive("autoGrow",function($timeout){return{restrict:"A",link:function($scope,$element,$attrs){function grow(){$element[0].style.height=0,$element[0].style.height=$element[0].scrollHeight+"px"}$element.on("input",grow),$timeout(grow,!0)}}}),function(module){try{module=angular.module("ts.utils")}catch(e){module=angular.module("ts.utils",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("templates/tsDropDown.html",'<div class="drop-down-container">\n  <div class="selected-item-container">\n  </div><div class="arrow-container">\n    <div ng-if="!dropDownOpen" class="drop-down-arrow"><i class="fa fa-angle-down"></i></div>\n    <div ng-if="dropDownOpen" class="drop-down-arrow"><i class="fa fa-angle-up"></i></div>\n  </div>\n  <div ng-show="dropDownOpen"\n       class="drop-down-list-container">\n    <ul>\n    </ul>\n  </div>\n</div>')}])}();
//# sourceMappingURL=utils.min.js.map
