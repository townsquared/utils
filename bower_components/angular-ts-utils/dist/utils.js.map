{"version":3,"sources":["utils.js","uiEvent.js","truncate.js","tooltip.js","scrollOn.js","focusOn.js","autoGrow.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["angular.module('ts.utils', []);\n","/**\n * @TODO remove in liue of ui-utils\n * General-purpose Event binding. Bind any event not natively supported by Angular\n * Pass an object with keynames for events to ui-event\n * Allows $event object and $params object to be passed\n *\n * @example <input ui-event=\"{ focus : 'counter++', blur : 'someCallback()' }\">\n * @example <input ui-event=\"{ myCustomEvent : 'myEventHandler($event, $params)'}\">\n *\n * @param ui-event {string|object literal} The event to bind to as a string or a hash of events with their callbacks\n */\nangular.module('ts.utils').directive('uiEvent', function ($parse) {\n    return {\n        priority: 100,\n        link: function ($scope, $elm, $attrs) {\n            var events = $scope.$eval($attrs.uiEvent);\n            angular.forEach(events, function (uiEvent, eventName) {\n                var fn = $parse(uiEvent);\n                $elm.bind(eventName, function (evt) {\n                    var params = Array.prototype.slice.call(arguments);\n                    //Take out first paramater (event object);\n                    params = params.splice(1);\n                    fn($scope, {$event: evt, $params: params});\n                    if (!$scope.$$phase) {\n                        $scope.$apply();\n                    }\n                });\n            });\n        }\n    };\n});\n","/**\n * truncate - Truncates a string by a specified number of words\n *\n * @example\n * \t<p>\n * \t\t{{::post.body | truncate : 35}}\n * \t\t<a ng-if=\"::post.body.split(' ').length>35\">Read More</a>\n * \t</p>\n *\n * @param {string} value  The string to be truncated\n * @param {int} [wordLimit] The number of words to truncate at. If falsey, doesn't truncate.\n * @param {string} [ellipses] The string to use as an ellipses. Default: '…' (&hellip;)\n */\n angular.module('ts.utils').filter('tsTruncate', function() {\n  return function(value, wordLimit, ellipses = '…'){\n    if (!value || !angular.isNumber(wordLimit))\n      return value;\n\n    var words = value.split(' ');\n\n    if (words.length > wordLimit) {\n      value = words.slice(0, wordLimit).join(' ');\n\n      if (ellipses)\n        value += ellipses;\n    }\n\n    return value;\n  }\n});\n","/**\n * ts-tooltip - Shows a tooltip with an arrow pointing to the element the directive is applied to.\n *\n * @note depends on jQuery\n *\n * @example\n *   <input ts-tooltip=\"Some message here will be compiled and linked against elements scope\" />\n *\n */\n\n\nangular.module('ts.utils')\n\n  .directive('tsTooltip', function($templateCache, $compile){\n\n    return {\n      restrict:'A',\n      scope:{\n        tsTooltip:'@',\n        tsTooltipDirection:'@',\n        tsTooltipEvent:'@',\n        tsTooltipShow:'='\n      },\n      link: function($scope, $element, $attrs) {\n        var ARROW_SIZE = 10;\n        var template = $templateCache.get('templates/tsTooltip.html');\n        var direction = $scope.tsTooltipDirection || 'right';\n        var eventType = $scope.tsTooltipEvent || 'mouseenter';\n        var isVisible = false;\n\n        var newTooltip = $compile(template)($scope);\n        newTooltip[0].style.visibility = 'hidden';\n\n        var tooltipMain = newTooltip.find(\"#tooltipMain\");\n        tooltipMain.addClass(direction);\n\n        console.log(tooltipMain);\n\n        $element.after(newTooltip);\n\n        function makeVisible(){\n          if(!isVisible){\n\n            isVisible = true;\n\n\n            newTooltip[0].style.visibility='visible';\n\n            switch(direction) {\n              case 'right':\n                newTooltip[0].style.left=ARROW_SIZE+'px';\n                newTooltip[0].style.top=-tooltipMain[0].offsetHeight/2+'px';\n                break;\n              case 'left':\n                newTooltip[0].style.left=-$element[0].offsetWidth-tooltipMain[0].offsetWidth-ARROW_SIZE+'px';\n                newTooltip[0].style.top=-tooltipMain[0].offsetHeight/2+'px';\n                break;\n              case 'top':\n                newTooltip[0].style.left=-$element[0].offsetWidth/2-tooltipMain[0].offsetWidth/2+'px';\n                newTooltip[0].style.top=-$element[0].offsetHeight/2-tooltipMain[0].offsetHeight-ARROW_SIZE+'px';\n                break;\n              case 'bottom':\n                newTooltip[0].style.left=-$element[0].offsetWidth/2-tooltipMain[0].offsetWidth/2+'px';\n                newTooltip[0].style.top=$element[0].offsetHeight/2 + 'px';\n                break;\n            }\n\n          }\n        }\n\n        function makeInvisible(){\n          if(isVisible){\n            isVisible = false;\n            newTooltip[0].style.visibility = 'hidden';\n          }\n        }\n\n        function toggleVisibility(){\n          if(isVisible){\n            makeInvisible();\n          }\n          else{\n            makeVisible();\n          }\n        }\n\n        if($attrs.tsTooltipShow === undefined){\n          switch(eventType){\n            case 'mouseenter':\n              $element.on('mouseenter', makeVisible);\n              $element.on('mouseleave', makeInvisible);\n              break;\n            case 'click':\n              $element.on('click', toggleVisibility);\n              break;\n          }\n        }\n        else{\n          $scope.$watch('tsTooltipShow',function(newVal, oldVal){\n            if(newVal){\n              makeVisible();\n            }\n            else{\n              makeInvisible();\n            }\n          })\n        }\n\n\n\n\n      }\n    };\n  });\n","\n/**\n * scrollOn - $broadcast()/$emit() a $scope event with the location to trigger scrolling\n *\n * @example\n *   <ul scroll-on=\"someEventName\" style=\"overflow: auto\">...</ul>\n *   ...\n *   var location = 'bottom';\n *   $scope.$broadcast('someEventName', location)\n *\n * @param location {'top'|'bottom'|offset} must be passed as event data\n */\nangular.module('ts.utils').directive('scrollOn', function($timeout) {\n  return {\n    link: {\n      pre: function($scope, $element, $attrs) {\n        $scope.$on($attrs.scrollOn, function(event, location){\n          // let updates render\n          $timeout(function(){\n            if (location === 'bottom') {\n              $element[0].scrollTop = $element[0].scrollHeight;\n            }\n            else if (location === 'top') {\n              $element[0].scrollTop = 0;\n            }\n            else {\n              $element[0].scrollTop = location;\n            }\n          }, true);\n        });\n      }\n    }\n  };\n});\n","/**\n * focusOn - Focuses an input on scope event\n *\n * @note depends on jQuery\n *\n * @example\n *   <input focus-on=\"someEventName\">\n *   or\n *   <input focus-on=\"focus-row-{{$index}}\">\n *   or\n *   <p focus-on=\"anotherEvent\"></p>\n *   ...\n *   $scope.$broadcast('someEventName');\n *   $scope.$broadcast('focus-row-2');\n *   $scope.$broadcast('anotherEvent');\n *\n *   focusOnConfigProvider - can be injected into a .config(function(focusOnConfigProvider){}) block to configure the\n *   app wide settings for the focusOn directive\n *\n *   Settings include:\n *      offset - number of pixels to offset the scroll to for a header or other info that appears above the element you\n *      want to scroll to the top of the screen.  The offset is subtracted from the computed scroll position\n *\n *      autoCenter - boolean if true will use the element height and document body height to scroll the element to the\n *      center of the screen instead of the top\n *\n *   App wide settings can be overridden using attributes along with the focus-on directive.  The attributes for the\n *   offset and autoCenter are focus-on-offset and focus-on-auto-center respectively.\n *\n */\n angular.module('ts.utils').directive('focusOn', function($window, focusOnConfig){\n  return {\n    link: function($scope, $element, $attrs) {\n      var listener = angular.noop;\n      $attrs.$observe('focusOn', function(newVal){\n        // Stop listening to old event name\n        listener();\n        // Listen to new event name\n        listener = $scope.$on(newVal, function(speed){\n          speed = speed || 1000;\n          // Center element on screen\n          if($element.parents('.reveal-modal').length) {\n            var targetWindow = $element.parents('.reveal-modal .content');\n            targetWindow.animate({\n              scrollTop: $element.offset().top - targetWindow.offset().top + targetWindow.scrollTop()\n            }, {\n              speed: speed,\n              complete: function complete() {\n                // Focus element (if input)\n                $element[0].focus();\n              }\n            });\n          }\n          else {\n            var offset = $element.offset().top;\n\n            // Use provider configured offset\n            var extraOffset = focusOnConfig.offset;\n\n            // If attribute is set override provider configured offset\n            if($attrs.focusOnOffset !== undefined){\n              extraOffset = parseInt($attrs.focusOnOffset);\n            }\n\n            // Check if provider or attribute set autoCenter/auto-center to true if so use offset/2 ignores the extra\n            // offset in this case\n            if( (focusOnConfig.autoCenter && $attrs.focusOnAutoCenter===undefined ) ||\n                ($attrs.focusOnAutoCenter && $attrs.focusOnAutoCenter=='true') ) {\n              offset = offset - window.innerHeight/2 - $element[0].clientHeight/2;\n            }\n            else{\n              offset = offset - extraOffset;\n            }\n\n            $('body').animate({ scrollTop: offset }, {\n              speed: speed,\n              complete: function complete() {\n                // Focus element (if input)\n                $element[0].focus();\n              }\n            });\n          }\n        });\n      });\n    }\n  };\n})\n\n.provider('focusOnConfig', function(){\n  var _offset = 0;\n  var _autoCenter = false;\n\n  this.autoCenter = function(value){\n    _autoCenter = value;\n  };\n\n  this.offset = function(value){\n    _offset = value;\n  };\n\n  this.$get = function(){\n    return {\n      offset: _offset,\n      autoCenter:_autoCenter\n    };\n  };\n\n});\n","/**\n * autoGrow - Increases height of textarea while typing\n *\n * @note use with min-height, max-height and box-sizing:border-box\n *\n * @example\n * \t<textarea auto-grow></textarea>\n */\n angular.module('ts.utils').directive('autoGrow', function($timeout) {\n  return {\n    restrict: 'A',\n    link: function($scope, $element, $attrs) {\n      function grow() {\n        $element[0].style.height = 0; // autoshrink - need accurate scrollHeight\n        $element[0].style.height = $element[0].scrollHeight + 'px';\n      }\n      $element.on('input', grow);\n      $timeout(grow, true);\n    }\n  }\n});\n"],"sourceRoot":"/source/"}