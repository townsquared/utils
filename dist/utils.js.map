{"version":3,"sources":["utils.js","uiEvent.js","truncate.js","scrollOn.js","paginator.js","focusOn.js","autoGrow.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["angular.module('ts.utils', []);\n","/**\n * @TODO remove in liue of ui-utils\n * General-purpose Event binding. Bind any event not natively supported by Angular\n * Pass an object with keynames for events to ui-event\n * Allows $event object and $params object to be passed\n *\n * @example <input ui-event=\"{ focus : 'counter++', blur : 'someCallback()' }\">\n * @example <input ui-event=\"{ myCustomEvent : 'myEventHandler($event, $params)'}\">\n *\n * @param ui-event {string|object literal} The event to bind to as a string or a hash of events with their callbacks\n */\nangular.module('ts.utils').directive('uiEvent', function ($parse) {\n    return {\n        priority: 100,\n        link: function ($scope, $elm, $attrs) {\n            var events = $scope.$eval($attrs.uiEvent);\n            angular.forEach(events, function (uiEvent, eventName) {\n                var fn = $parse(uiEvent);\n                $elm.bind(eventName, function (evt) {\n                    var params = Array.prototype.slice.call(arguments);\n                    //Take out first paramater (event object);\n                    params = params.splice(1);\n                    fn($scope, {$event: evt, $params: params});\n                    if (!$scope.$$phase) {\n                        $scope.$apply();\n                    }\n                });\n            });\n        }\n    };\n});\n","/**\n * truncate - Truncates a string by a specified number of words\n *\n * @example\n * \t<p>\n * \t\t{{::post.body | truncate : 35}}\n * \t\t<a ng-if=\"::post.body.split(' ').length>35\">Read More</a>\n * \t</p>\n *\n * @param {string} value  The string to be truncated\n * @param {int} [wordLimit] The number of words to truncate at. If falsey, doesn't truncate.\n * @param {string} [ellipses] The string to use as an ellipses. Default: '…' (&hellip;)\n */\n angular.module('ts.utils').filter('tsTruncate', function() {\n  return function(value, wordLimit, ellipses = '…'){\n    if (!value || !angular.isNumber(wordLimit))\n      return value;\n\n    var words = value.split(' ');\n\n    if (words.length > wordLimit) {\n      value = words.slice(0, wordLimit).join(' ');\n\n      if (ellipses)\n        value += ellipses;\n    }\n\n    return value;\n  }\n});\n","\n/**\n * scrollOn - $broadcast()/$emit() a $scope event with the location to trigger scrolling\n *\n * @example\n *   <ul scroll-on=\"someEventName\" style=\"overflow: auto\">...</ul>\n *   ...\n *   var location = 'bottom';\n *   $scope.$broadcast('someEventName', location)\n *\n * @param location {'top'|'bottom'|offset} must be passed as event data\n */\nangular.module('ts.utils').directive('scrollOn', function($timeout) {\n  return {\n    link: {\n      pre: function($scope, $element, $attrs) {\n        $scope.$on($attrs.scrollOn, function(event, location){\n          // let updates render\n          $timeout(function(){\n            if (location === 'bottom') {\n              $element[0].scrollTop = $element[0].scrollHeight;\n            }\n            else if (location === 'top') {\n              $element[0].scrollTop = 0;\n            }\n            else {\n              $element[0].scrollTop = location;\n            }\n          }, true);\n        });\n      }\n    }\n  };\n});\n","/**\n * Paginator\n *\n * Simple paginator utility example that abstracts logic in a controllable pattern\n *\n * @TODO make paginator only lookup missing related data\n *\n * @param paginate {function} Query function that takes paginationOptions\n *\n * @example\n *   resolve: {\n *     // Prepares the paginator\n *     paginator: function(Paginator, Project) {\n *       // Calls `Project.list(paginationOptions)`\n *       return new Paginator(Project.list, { limit: 50 });\n *     },\n *     // Queries the initial load\n *     projects: function(paginator) {\n *       return paginator.next();\n *     }\n *   }\n *\n * @example\n *   resolve: {\n *     taskPaginator: function(Paginator, Task, $stateParams) {\n *       return new Paginator( (paginationOptions) => Task.list($stateParams.projectId, paginationOptions) );\n *       // or\n *       return new Paginator( Task.list, { projectId: $stateParams.projectId } );\n *     },\n *     tasks: function(taskPaginator) {\n *       return taskPaginator.next();\n *     }\n *   }\n */\nangular.module('ts.utils').factory('Paginator', function($http, $q){\n\n  class Paginator {\n    /**\n     * @param  {string|function} paginate URL or callback function that returns\n     *                                    a promise\n     * @param  {object} options Default paginate query options\n     * @param  {object} relatedHelpers Map of callback functions that take array\n     *                                 of items and returns an indexed hash\n     */\n    constructor(paginate, options = {}, relatedHelpers = {}) {\n      this.resetOptions = options;\n      this.paginate = paginate;\n      this.relatedHelpers = relatedHelpers;\n      this.related = _.mapValues(this.relatedHelpers, () => {\n        return {};\n      });\n    }\n\n    /**\n     * paginator.paginate - paginator function\n     *\n     * @param  {url|function} paginate\n     *   If a url is provided, a wrapper for $http.get() is created\n     *   If a callback is provided, use that instead\n     */\n    set paginate(paginate) {\n      this.reset();\n      if (angular.isString(paginate))\n        this._paginate = (paginateOptions) => $http.get(paginate, { params: paginateOptions });\n      else\n        this._paginate = paginate;\n    }\n\n    get paginate() {\n      return this._paginate;\n    }\n\n    /**\n     * reset()\n     *\n     * Clear items collection. Useful for preserving related data.\n     *\n     * @note If you want a hard reset of all related data, create a new Paginator\n     *\n     * @param {object} [resetOptions]\n     *   Optional hash of options to reset with,\n     *   otherwise last reset options will be used\n     */\n    reset(resetOptions = this.resetOptions) {\n      this.resetOptions = resetOptions;\n      this.options = _.extend({\n        limit: 40,\n        offset: 0,\n        page: 0\n      }, resetOptions);\n      this.hasMore = true;\n      this.items = [];\n      return this;\n    }\n\n    /**\n     * add()\n     *\n     * Add item to this.items and populate related\n     *\n     * @param  {index|object} item Reference to an object or the index\n     */\n    add(item) {\n      this.items.unshift(item);\n      return this.getRelated([item]);\n    }\n\n    /**\n     * remove()\n     *\n     * Remove item from items\n     *\n     * @param  {index|object} item Reference to an object or the index\n     */\n    remove(item) {\n      if (!this.items[item])\n        item = this.items.indexOf(item);\n\n      if (~item)\n        this.items.splice(item, 1);\n    }\n\n    /**\n     * next()\n     *\n     * Sets `paginator.loading` to true while querying\n     *\n     * @return {Function} [description]\n     */\n    next() {\n      if (!this.hasMore) return $q.when(this.items);\n      if (this.loading) return this.loading;\n\n      return this.loading = this.paginate(this.options)\n        .then( items => {\n          if (!items.length)\n            this.hasMore = false;\n\n          this.items = this.items.concat(items.reverse());\n\n          // @TODO remove shitty hack for bugs with backend giving duplicates\n          this.items = _.uniq(this.items, 'uuid');\n\n          this.options.page++;\n          this.options.offset = this.options.page * this.options.limit;\n          return this.getRelated(items);\n        })\n        .then( related => this.items )\n        .finally( () => this.loading = null );;\n    }\n\n    /**\n     * getRelated(newItems)\n     *\n     * Iterates over related data retrieval helpers\n     * When each helper resolves with a hash of relatedItems, they are merged onto\n     * the paginator's existing cache of related items.\n     *\n     * @example\n     *   paginator = new Paginator(Project.list(), {}, { owners: Project.relatedOwners });\n     *   paginator.next();\n     *\n     *   <li ng-repeat=\"project in paginator.projects\">\n     *     {{paginator.related.owners[project.owner_id].name}}\n     *   </li>\n     *\n     * @param  {array} [items] an array of objects to pass to the related helper\n     * @return {Promise}       resolved when all helpers are done\n     */\n    getRelated(items = this.items) {\n      return $q.all(_.mapValues(this.relatedHelpers, (helper, name) =>\n        helper(items)\n          .then( relatedItems => _.extend(this.related[name], relatedItems) )\n      ));\n    }\n\n  }\n\n  return Paginator;\n});\n","/**\n * focusOn - Focuses an input on scope event\n *\n * @example\n *   <input focus-on=\"someEventName\">\n *   or\n *   <input focus-on=\"focus-row-{{$index}}\">\n *   ...\n *   $scope.$broadcast('someEventName')\n *\n */\n angular.module('ts.utils').directive('focusOn', function(){\n  return {\n    link: function($scope, $element, $attrs) {\n      var listener = angular.noop;\n      $attrs.$observe('focusOn', function(newVal){\n        // Stop listening to old event name\n        listener();\n        // Listen to new event name\n        listener = $scope.$on(newVal, function(){\n          $element[0].focus();\n        });\n      });\n    }\n  };\n});\n","/**\n * autoGrow - Increases height of textarea while typing\n *\n * @note use with min-height, max-height and box-sizing:border-box\n *\n * @example\n * \t<textarea auto-grow></textarea>\n */\n angular.module('ts.utils').directive('autoGrow', function($timeout) {\n  return {\n    restrict: 'A',\n    link: function($scope, $element, $attrs) {\n      function grow() {\n        $element[0].style.height = 0; // autoshrink - need accurate scrollHeight\n        $element[0].style.height = $element[0].scrollHeight + 'px';\n      }\n      $element.on('input', grow);\n      $timeout(grow, true);\n    }\n  }\n});\n"],"sourceRoot":"/source/"}