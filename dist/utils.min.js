"use strict";angular.module("ts.utils",[]),angular.module("ts.utils").directive("uiEvent",function($parse){return{priority:100,link:function($scope,$elm,$attrs){var events=$scope.$eval($attrs.uiEvent);angular.forEach(events,function(uiEvent,eventName){var fn=$parse(uiEvent);$elm.bind(eventName,function(evt){var params=Array.prototype.slice.call(arguments);params=params.splice(1),fn($scope,{$event:evt,$params:params}),$scope.$$phase||$scope.$apply()})})}}}),angular.module("ts.utils").filter("tsTruncate",function(){return function(value,wordLimit){var ellipses=arguments.length<=2||void 0===arguments[2]?"â€¦":arguments[2];if(!value||!angular.isNumber(wordLimit))return value;var words=value.split(" ");return words.length>wordLimit&&(value=words.slice(0,wordLimit).join(" "),ellipses&&(value+=ellipses)),value}}),angular.module("ts.utils").directive("tsTooltip",function($templateCache,$compile,$window){return{restrict:"A",scope:{tsTooltip:"@",tsTooltipDirection:"@",tsTooltipEvent:"@",tsTooltipShow:"="},controller:function($scope){this.setTranscluded=function(transclude){$scope.transcludedContentFn=transclude}},link:function($scope,$element,$attr){function offset(elem){var docElem,win,rect,doc;if(elem)return rect=elem.getBoundingClientRect(),rect.width||rect.height||elem.getClientRects().length?(doc=elem.ownerDocument,win=$window,docElem=doc.documentElement,{top:rect.top+win.pageYOffset-docElem.clientTop,left:rect.left+win.pageXOffset-docElem.clientLeft}):void 0}function positionTooltip(){var elementOffset=offset($element[0]),leftCommon=elementOffset.left-origOffset.left,topCommon=elementOffset.top-origOffset.top;switch(direction){case"right":case"left":newTooltip.style.top=topCommon+$element[0].offsetHeight-$scope.tooltipMain[0].offsetHeight/2-ARROW_SIZE+"px";break;case"top":case"bottom":newTooltip.style.left=leftCommon+$element[0].offsetWidth/2-$scope.tooltipMain[0].offsetWidth/2+"px"}switch(direction){case"right":newTooltip.style.left=leftCommon+$element[0].offsetWidth+ARROW_SIZE+"px";break;case"left":newTooltip.style.left=leftCommon-$scope.tooltipMain[0].offsetWidth-ARROW_SIZE+"px";break;case"top":newTooltip.style.top=topCommon-$scope.tooltipMain[0].offsetHeight-ARROW_SIZE+"px";break;case"bottom":newTooltip.style.top=topCommon+$element[0].offsetHeight+ARROW_SIZE+"px"}}function makeVisible(){isVisible||(positionTooltip(),isVisible=!0,tooltipContainer[0].style.visibility="visible")}function makeInvisible(){isVisible&&(isVisible=!1,tooltipContainer[0].style.visibility="hidden")}function toggleVisibility(){isVisible?makeInvisible():makeVisible()}var ARROW_SIZE=10,template=$templateCache.get("templates/tsTooltip.html"),direction=$scope.tsTooltipDirection||"right",eventType=$scope.tsTooltipEvent||"mouseenter",isVisible=!1,tooltipContainer=$compile(template)($scope);tooltipContainer[0].style.visibility="hidden";var newTooltip=tooltipContainer.children()[0];$scope.$watch(function(){return newTooltip.offsetWidth},positionTooltip),$scope.$watch(function(){return newTooltip.offsetHeight},positionTooltip),$scope.$watch(function(){return $element[0].getBoundingClientRect().top},positionTooltip),$scope.$watch(function(){return $element[0].getBoundingClientRect().left},positionTooltip),$scope.tooltipMain=tooltipContainer.find("#tooltipMain"),$scope.tooltipMain.addClass(direction),document.body.insertBefore(tooltipContainer[0],document.body.childNodes[0]),$scope.transcludedContentFn&&$scope.transcludedContentFn(function(clone,scope){$scope.tooltipMain.append(clone),$scope.tooltipScope=scope});var origOffset=offset(newTooltip);if(void 0===$attr.tsTooltipShow)switch(eventType){case"mouseenter":$element.on("mouseenter",makeVisible),$element.on("mouseleave",makeInvisible);break;case"click":$element.on("click",toggleVisibility)}else $scope.$watch("tsTooltipShow",function(newVal,oldVal){newVal?makeVisible():makeInvisible()});$scope.$on("$destroy",function(){$scope.tooltipScope&&$scope.tooltipScope.$destroy(),newTooltip.remove()})}}}).directive("tsTooltipContent",function(){return{restrict:"E",require:"^tsTooltip",transclude:"element",link:function(scope,iElem,iAttr,tooltipController,transclude){tooltipController.setTranscluded(transclude)}}}),angular.module("ts.utils").directive("scrollOn",function($timeout){return{link:{pre:function($scope,$element,$attrs){$scope.$on($attrs.scrollOn,function(event,location){$timeout(function(){"bottom"===location?$element[0].scrollTop=$element[0].scrollHeight:"top"===location?$element[0].scrollTop=0:$element[0].scrollTop=location},!0)})}}}}),angular.module("ts.utils").directive("focusOn",function($window,focusOnConfig){return{link:function($scope,$element,$attrs){var listener=angular.noop;$attrs.$observe("focusOn",function(newVal){listener(),listener=$scope.$on(newVal,function(speed){if(speed=speed||1e3,$element.parents(".reveal-modal").length){var targetWindow=$element.parents(".reveal-modal .content");targetWindow.animate({scrollTop:$element.offset().top-targetWindow.offset().top+targetWindow.scrollTop()},{speed:speed,complete:function(){$element[0].focus()}})}else{var offset=$element.offset().top,extraOffset=focusOnConfig.offset;void 0!==$attrs.focusOnOffset&&(extraOffset=parseInt($attrs.focusOnOffset)),(focusOnConfig.autoCenter||focusOnConfig.autoCenterInputs&&"INPUT"==$element[0].tagName.toUpperCase()||focusOnConfig.autoCenterInputs&&"TEXTAREA"==$element[0].tagName.toUpperCase())&&void 0===$attrs.focusOnAutoCenter||$attrs.focusOnAutoCenter&&"true"==$attrs.focusOnAutoCenter?offset=offset-window.innerHeight/2-$element[0].clientHeight/2:offset-=extraOffset,$("body").animate({scrollTop:offset},{speed:speed,complete:function(){$element[0].focus()}})}})})}}}).provider("focusOnConfig",function(){var focusConfig={offset:0,autoCenter:!1,autoCenterInputs:!1};this.autoCenter=function(value){focusConfig.autoCenter=value},this.autoCenterInputs=function(value){focusConfig.autoCenterInputs=value},this.offset=function(value){focusConfig.offset=value},this.$get=function(){return focusConfig}}),angular.module("ts.utils").directive("tsDropDown",function($templateCache,$compile){return{restrict:"A",require:"ngModel",scope:{tsDropDownTemplate:"@",tsDropDown:"=",tsDropDownWidth:"=",tsItemClick:"&"},controller:function($scope){this.setPlaceholder=function(transclude){$scope.placeholderTransclude=transclude},this.setListItem=function(transclude){$scope.listItemTransclude=transclude}},link:function($scope,$element,$attr,ngModelCtrl){function moveHighlightDown(){for(;$scope.tsDropDown.length-1>selectedIndex&&(selectedIndex++,$scope.tsDropDown[selectedIndex].hasOwnProperty("interactive")&&$scope.tsDropDown[selectedIndex].interactive!==!0););$scope.highlightedItem=$scope.tsDropDown[selectedIndex]}function moveHighlightUp(){for(;selectedIndex>0&&(selectedIndex--,$scope.tsDropDown[selectedIndex].hasOwnProperty("interactive")&&$scope.tsDropDown[selectedIndex].interactive!==!0););$scope.highlightedItem=$scope.tsDropDown[selectedIndex]}function toggleDropDown(){var rect=$element[0].getBoundingClientRect(),middleOfWindow=window.innerHeight/2,middleOfElement=rect.top+rect.height/2;middleOfElement>middleOfWindow?($scope.direction="up",dropDownListContainer[0].style.bottom=rect.height+"px",dropDownListContainer[0].style.top="auto"):(dropDownListContainer[0].style.top=rect.height+"px",dropDownListContainer[0].style.bottom="auto",$scope.direction="down"),$scope.dropDownOpen=!$scope.dropDownOpen}function updateSelected(selectedValue){placeholderScope.selectedItem=selectedItem=selectedValue,$scope.$evalAsync(read)}function read(){ngModelCtrl.$setViewValue(selectedItem)}var selectedIndex=0,ae=angular.element,placeholderElement=void 0,placeholderScope=void 0,selectedItem=void 0;$element.attr("tabindex","0"),$scope.direction="down",$scope.dropDownOpen=!1;var template=$templateCache.get("templates/tsDropDown.html"),container=$compile(template)($scope);$element.append(container);var textDisplayElement=ae(container.children()[0]),dropDownArrow=ae(container.children()[1]),dropDownListContainer=ae(container.children()[2]),dropDownUnorderedList=ae($element[0].querySelector("ul"));$element.on("keydown",function(event){switch(event.keyCode){case 13:updateSelected($scope.highlightedItem),toggleDropDown(),event.preventDefault();break;case 38:$scope.dropDownOpen?$scope.$apply(moveHighlightUp):toggleDropDown(),event.preventDefault();break;case 40:$scope.dropDownOpen?$scope.$apply(moveHighlightDown):toggleDropDown(),event.preventDefault()}}),$scope.$watch("tsDropDown",function(){angular.isArray($scope.tsDropDown)&&$scope.tsDropDown.forEach(function(dropDownItem){$scope.listItemTransclude&&$scope.listItemTransclude($scope.$new(),function(clone,scope){scope.item=dropDownItem;var listItem=ae(document.createElement("li"));listItem.attr("ng-class",'{"highlighted":highlightedItem==item}');var compiledListItem=$compile(listItem)(scope);compiledListItem.append(clone[0]),dropDownItem.hasOwnProperty("interactive")&&dropDownItem.interactive!==!0||(compiledListItem.on("click",function(){updateSelected(dropDownItem),$scope.tsItemClick&&$scope.tsItemClick({item:dropDownItem}),$scope.$apply(toggleDropDown)}),compiledListItem.on("mouseenter",function(){$scope.highlightedItem=scope.item,selectedIndex=$scope.tsDropDown.indexOf(scope.item),$scope.$apply()})),compiledListItem[0].style.width=(scope.tsDropDownWidth||textDisplayElement[0].offsetWidth)+"px",dropDownUnorderedList.append(compiledListItem)})})}),$scope.$watch("tsDropDownWidth",function(newVal){if(newVal)for(var i=0;i<dropDownUnorderedList.children().length;i++){var child=dropDownUnorderedList.children()[i];child.style.width=newVal+"px"}}),$scope.highlightedItem=$scope.tsDropDown[selectedIndex],$scope.placeholderTransclude&&$scope.placeholderTransclude($scope.$new(),function(clone,scope){placeholderScope=scope,placeholderElement=clone[0],textDisplayElement.append(clone[0])}),textDisplayElement.on("click",function(){$scope.$apply(toggleDropDown)}),dropDownArrow.on("click",function(){$scope.$apply(toggleDropDown)}),ngModelCtrl&&($element.on("blur",function(){$scope.$apply(function(){$scope.dropDownOpen=!1})}),ngModelCtrl.$render=function(){updateSelected(ngModelCtrl.$viewValue||"")})}}}).directive("tsPlaceholder",function(){return{restrict:"E",require:"^tsDropDown",transclude:"element",link:function(scope,iElem,iAttr,dropDownController,transclude){dropDownController.setPlaceholder(transclude)}}}).directive("tsListItem",function(){return{restrict:"E",require:"^tsDropDown",transclude:"element",link:function(scope,iElem,iAttr,dropDownController,transclude){dropDownController.setListItem(transclude)}}}),function(module){try{module=angular.module("ts.utils")}catch(e){module=angular.module("ts.utils",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("templates/tsTooltip.html",'<div class="ts-tooltip-container">\n  <div class="arrow-box-container">\n    <div id="tooltipMain" class="ts-tooltip-main">\n      {{tsTooltip}}\n    </div>\n  </div>\n</div>')}])}(),angular.module("ts.utils").directive("autoGrow",function($timeout){return{restrict:"A",link:function($scope,$element,$attrs){function grow(){$element[0].style.height=0,$element[0].style.height=$element[0].scrollHeight+"px"}$element.on("input",grow),$timeout(grow,!0)}}}),function(module){try{module=angular.module("ts.utils")}catch(e){module=angular.module("ts.utils",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("templates/tsDropDown.html",'<div class="drop-down-container">\n  <div class="selected-item-container">\n  </div><div class="arrow-container" ng-class="{\'arrow-default\':!dropDownOpen, \'arrow-open\':dropDownOpen}">\n  </div>\n  <div ng-show="dropDownOpen"\n       class="drop-down-list-container">\n    <ul>\n    </ul>\n  </div>\n</div>')}])}();
//# sourceMappingURL=utils.min.js.map
