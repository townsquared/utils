"use strict";angular.module("ts.utils",[]),angular.module("ts.utils").directive("uiEvent",function($parse){return{priority:100,link:function($scope,$elm,$attrs){var events=$scope.$eval($attrs.uiEvent);angular.forEach(events,function(uiEvent,eventName){var fn=$parse(uiEvent);$elm.bind(eventName,function(evt){var params=Array.prototype.slice.call(arguments);params=params.splice(1),fn($scope,{$event:evt,$params:params}),$scope.$$phase||$scope.$apply()})})}}}),angular.module("ts.utils").filter("tsTruncate",function(){return function(value,wordLimit){var ellipses=arguments.length<=2||void 0===arguments[2]?"â€¦":arguments[2];if(!value||!angular.isNumber(wordLimit))return value;var words=value.split(" ");return words.length>wordLimit&&(value=words.slice(0,wordLimit).join(" "),ellipses&&(value+=ellipses)),value}}),angular.module("ts.utils").directive("tsTooltip",function($templateCache,$compile){return{restrict:"A",scope:{tsTooltip:"@",tsTooltipDirection:"@",tsTooltipEvent:"@",tsTooltipShow:"="},link:function($scope,$element,$attrs){function makeVisible(){if(!isVisible)switch(isVisible=!0,newTooltip[0].style.visibility="visible",direction){case"right":newTooltip[0].style.left="10px",newTooltip[0].style.top=-newTooltip.children()[0].offsetHeight/2+"px";break;case"left":newTooltip[0].style.left=-$element[0].offsetWidth-newTooltip.children()[0].offsetWidth-10+"px",newTooltip[0].style.top=-newTooltip.children()[0].offsetHeight/2+"px";break;case"top":newTooltip[0].style.left=-$element[0].offsetWidth/2-newTooltip.children()[0].offsetWidth/2+"px",newTooltip[0].style.top=-$element[0].offsetHeight/2-newTooltip.children()[0].offsetHeight-10+"px";break;case"bottom":newTooltip[0].style.left=-$element[0].offsetWidth/2-newTooltip.children()[0].offsetWidth/2+"px",newTooltip[0].style.top=$element[0].offsetHeight/2+"px"}}function makeInvisible(){isVisible&&(isVisible=!1,newTooltip[0].style.visibility="hidden")}function toggleVisibility(){isVisible?makeInvisible():makeVisible()}var template=$templateCache.get("templates/tsTooltip.html"),direction=$scope.tsTooltipDirection||"right",eventType=$scope.tsTooltipEvent||"mouseenter",isVisible=!1,newTooltip=$compile(template)($scope);newTooltip[0].style.visibility="hidden";var tooltipMain=newTooltip.find("#tooltipMain");if(tooltipMain.addClass(direction),$element.after(newTooltip),void 0===$attrs.tsTooltipShow)switch(eventType){case"mouseenter":$element.on("mouseenter",makeVisible),$element.on("mouseleave",makeInvisible);break;case"click":$element.on("click",toggleVisibility)}else $scope.$watch("tsTooltipShow",function(newVal,oldVal){newVal?makeVisible():makeInvisible()})}}}),angular.module("ts.utils").directive("scrollOn",function($timeout){return{link:{pre:function($scope,$element,$attrs){$scope.$on($attrs.scrollOn,function(event,location){$timeout(function(){"bottom"===location?$element[0].scrollTop=$element[0].scrollHeight:"top"===location?$element[0].scrollTop=0:$element[0].scrollTop=location},!0)})}}}}),angular.module("ts.utils").directive("focusOn",function($window,focusOnConfig){return{link:function($scope,$element,$attrs){var listener=angular.noop;$attrs.$observe("focusOn",function(newVal){listener(),listener=$scope.$on(newVal,function(speed){if(speed=speed||1e3,$element.parents(".reveal-modal").length){var targetWindow=$element.parents(".reveal-modal .content");targetWindow.animate({scrollTop:$element.offset().top-targetWindow.offset().top+targetWindow.scrollTop()},{speed:speed,complete:function(){$element[0].focus()}})}else{var offset=$element.offset().top,extraOffset=focusOnConfig.offset;void 0!==$attrs.focusOnOffset&&(extraOffset=parseInt($attrs.focusOnOffset)),focusOnConfig.autoCenter&&void 0===$attrs.focusOnAutoCenter||$attrs.focusOnAutoCenter&&"true"==$attrs.focusOnAutoCenter?offset=offset-window.innerHeight/2-$element[0].clientHeight/2:offset-=extraOffset,$("body").animate({scrollTop:offset},{speed:speed,complete:function(){$element[0].focus()}})}})})}}}).provider("focusOnConfig",function(){var _offset=0,_autoCenter=!1;this.autoCenter=function(value){_autoCenter=value},this.offset=function(value){_offset=value},this.$get=function(){return{offset:_offset,autoCenter:_autoCenter}}}),angular.module("ts.utils").directive("autoGrow",function($timeout){return{restrict:"A",link:function($scope,$element,$attrs){function grow(){$element[0].style.height=0,$element[0].style.height=$element[0].scrollHeight+"px"}$element.on("input",grow),$timeout(grow,!0)}}});
//# sourceMappingURL=utils.min.js.map
